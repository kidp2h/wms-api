version: '3.7'

services:
  wms-api:
    container_name: wms-api
    restart: always
    deploy:
      restart_policy:
        condition: on-failure
        max_attempts: 3
    build:
      context: ../
      dockerfile: ./.docker/Dockerfile.dev
      target: api
      args:
        - PORT=${PORT}
        - NODE_ENV=development
    command: pnpm start:dev
    environment:
      DATABASE_URL: ${DATABASE_URL}
      REDIS_URL: ${REDIS_URL}
    ports:
      - ${PORT}:8334
    volumes:
      - ../:/wms-api
      - ../package.json:/wms-api/package.json
      - ../pnpm-lock.yaml:/wms-api/pnpm-lock.yaml
    networks:
      - wms
    depends_on:
      wms-redis:
        condition: service_healthy
      wms-db:
        condition: service_healthy
  wms-studio:
    container_name: wms-studio
    restart: always
    deploy:
      restart_policy:
        condition: on-failure
        max_attempts: 3
    build:
      context: ../
      dockerfile: ./.docker/Dockerfile.dev
      target: studio
    command: prisma studio
    volumes:
      - ../prisma:/wms-studio/prisma
    environment:
      DATABASE_URL: ${DATABASE_URL}
    ports:
      - 5555:5555
    networks:
      - wms
  wms-redis:
    container_name: wms-redis
    image: redis:7-alpine

    command: redis-server /usr/local/etc/redis/redis.conf
    volumes:
      - ./.redis/redis.conf:/usr/local/etc/redis/redis.conf
    restart: always
    networks:
      - wms
    healthcheck:
      test: ['CMD-SHELL', 'redis-cli ping | grep PONG']
      timeout: 20s
      interval: 10s
      retries: 10
    ports:
      - ${REDIS_PORT}:6379
  wms-db:
    container_name: wms-db
    image: mysql:8.0
    restart: always
    volumes:
      - wms-data:/var/lib/mysql
      - ./.db/mysql/conf.d:/etc/mysql/conf.d
    ports:
      - ${DATABASE_PORT}:3306
    environment:
      MYSQL_ROOT_PASSWORD: ${DATABASE_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DATABASE_NAME}
      MYSQL_USER: ${DATABASE_USER}
      MYSQL_PASSWORD: ${DATABASE_PASSWORD}
    command: --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    deploy:
      restart_policy:
        condition: on-failure
        max_attempts: 5
    healthcheck:
      test: ['CMD', 'mysqladmin', 'ping', '-h', 'localhost']
      timeout: 20s
      interval: 10s
      retries: 10
    networks:
      - wms

networks:
  wms:
    driver: bridge
volumes:
  wms-data:
